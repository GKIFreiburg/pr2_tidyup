<!-- -->
<launch>

    <arg name="gui" default="false" />
    <arg name="config_pkg" default="$(find tidyup_demo_launch)"/>
	<arg name="start_paused" default="true" />
	<arg name="use_inverse_reachability_maps" default="true" />

    <rosparam command="load" ns="tfd_modules" file="$(arg config_pkg)/config/planner_params.yaml" />

	<!-- gki_3dnav_planner and costmaps for navigation modules -->
	<group ns="tfd_modules">
		<param name="base_global_planner" value="gki_3dnav_planner/GKI3dNavPlanner" />
		<param name="GKI3dNavPlanner/primitive_filename" value="$(find gki_3dnav_planner)/config/pr2_base.mprim" />
		<rosparam file="$(find planner_modules_pr2)/config/global_costmap_static_params.yaml" command="load" ns="global_costmap"/>
		<rosparam file="$(find gki_3dnav_planner)/config/sbpl_global_params.yaml" command="load" />
	</group>

    <rosparam if="$(arg use_inverse_reachability_maps)" command="load" ns="tfd_modules/irs" file="$(arg config_pkg)/config/inverse_reachability_sampling.yaml" />

    <!-- start executive / if required = true, kill roslaunch when node dies -->
    <node pkg="continual_planning_executive" type="continual_planning_executive" args="" respawn="false" name="continual_planning_executive" output="screen" required="false">
        <param name="start_paused" value="$(arg start_paused)" />
        <param name="locations" value="$(arg config_pkg)/config/locations.dat" />
        <param name="tables" value="$(arg config_pkg)/config/tables.dat" />
		<param name="wave_head_degrees" value="40" />
        <!-- tolerance to use when determining if navigation has reached a target (i.e. we are AT a target)
            if nav_target_tolerance_relative_to_move_base is true, nav_base_local_planner_ns should give
            the namespace that holds the xy_goal_tolerance parameter the base_local_planner uses.
        -->
        <param name="nav_target_tolerance_xy" value="0.25" />
        <param name="nav_target_tolerance_yaw" value="0.25" />
        <param name="nav_target_tolerance_relative_to_move_base" value="false" />
        <param name="nav_base_local_planner_ns" value="/move_base/TrajectoryPlannerROS" />

        <!--<param name="door_location_file" value="$(arg config_pkg)/config/doors.dat" /> -->
        <rosparam command="load" file="$(arg config_pkg)/config/actions.yaml" />
        <rosparam command="load" file="$(find tfd_modules)/config/tfdm_interface.yaml" />
        <rosparam command="load" file="$(arg config_pkg)/config/domain.yaml" />
        <rosparam command="load" file="$(arg config_pkg)/config/module_options.yaml" />
		<!-- inverse reachability maps -->
        <rosparam if="$(arg use_inverse_reachability_maps)" command="load" file="$(arg config_pkg)/config/inverse_reachability_maps.yaml" />
    </node>

    <node if="$(arg gui)" pkg="continual_planning_monitor" type="continual_planning_monitor" name="continual_planning_monitor" />

</launch>

