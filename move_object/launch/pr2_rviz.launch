<launch>
  <!-- Debug -->  
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find pr2_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- get tf transform of robot -->
  <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom_combined base_footprint 100" />

  <!-- Node to set the joints of the robot -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>
 
  <!-- This package allows you to publish the state of a robot to tf. -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

 <include file="$(find pr2_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
 </include>

 # The visualization in rviz
 <include file="$(find move_object)/launch/moveit_rviz.launch">
   <arg name="config" value="true"/>
   <arg name="debug" value="false"/>
   <rosparam command="load" file="$(find pr2_moveit_config)/config/kinematics.yaml"/> 
 </include>
 

</launch>
