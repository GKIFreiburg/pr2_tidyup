# To install ORK follow these steps
# mkdir ws && cd ws
# export DISTRO=hydro
# sudo apt-get install libopenni-dev ros-${DISTRO}-catkin ros-${DISTRO}-ecto* ros-${DISTRO}-opencv-candidate ros-${DISTRO}-moveit-msgs ros-${DISTRO}-octomap-server ros-${DISTRO}-sbpl ros-${DISTRO}-object-recognition-ros-visualization
# source /opt/ros/${DISTRO}/setup.sh
# wstool init src ork.rosinstall
# cd src && wstool update -j8
# cd .. && rosdep install --from-paths src -i -y
# catkin_make
# source devel/setup.bash

- git: {local-name: ecto/ecto, uri: "https://github.com/plasmodic/ecto", version: "0.6.7"}
- git: {local-name: ecto/image_pipeline, uri: "https://github.com/plasmodic/ecto_image_pipeline"}
- git: {local-name: ecto/openni, uri: "https://github.com/plasmodic/ecto_openni"}
- git: {local-name: ecto/opencv, uri: "https://github.com/plasmodic/ecto_opencv"}
- git: {local-name: ecto/pcl, uri: "https://github.com/plasmodic/ecto_pcl"}
- git: {local-name: ecto/ros, uri: "https://github.com/plasmodic/ecto_ros"}

- git: {local-name: ork/object_recognition_core, uri: "https://github.com/wg-perception/object_recognition_core"}
- git: {local-name: ork/capture, uri: "https://github.com/wg-perception/capture"}
- git: {local-name: ork/reconstruction, uri: "https://github.com/wg-perception/reconstruction"}
- git: {local-name: ork/linemod, uri: "https://github.com/wg-perception/linemod"}
- git: {local-name: ork/renderer, uri: "https://github.com/wg-perception/ork_renderer"}
- git: {local-name: ork/tabletop, uri: "https://github.com/wg-perception/tabletop"}
- git: {local-name: ork/tod, uri: "https://github.com/wg-perception/tod"}
- git: {local-name: ork/transparent_objects, uri: "https://github.com/wg-perception/transparent_objects"}
- git: {local-name: ork/object_recognition_ros, uri: "https://github.com/wg-perception/object_recognition_ros"}
- git: {local-name: ork/object_recognition_ros_visualization, uri: "https://github.com/wg-perception/object_recognition_ros_visualization"}
# - git: {local-name: ork/object_recognition_msgs, uri: "https://github.com/wg-perception/object_recognition_msgs"}
- git: {local-name: ork/object_recognition_household, uri: "https://github.com/wg-perception/object_recognition_household"}

- git: {local-name: household_objects_database, uri: "https://github.com/ros-interactive-manipulation/household_objects_database"}

# GKI Freiburg
- git: {local-name: pr2_tidyup, uri: "git@github.com:GKIFreiburg/pr2_tidyup.git"}
- git: {local-name: gki_pr2_symbolic_planning, uri: "git@github.com:GKIFreiburg/gki_pr2_symbolic_planning.git"}
- git: {local-name: gki_symbolic_planning, uri: "git@github.com:GKIFreiburg/gki_symbolic_planning.git"}

- git: {local-name: ork_to_planning_scene, uri: "https://github.com/dornhege/ork_to_planning_scene.git"}
- git: {local-name: moveit_simple_grasps, uri: "git@github.com:dornhege/moveit_simple_grasps.git", version: "hydro-devel"}
- git: {local-name: moveit_visual_tools, uri: "git@github.com:dornhege/moveit_visual_tools.git", version: "hydro-devel"}

# Move_base planner
- git: {local-name: gki_3dnav, uri: 'git@github.com:GKIFreiburg/gki_3dnav.git'}
- git: {local-name: sbpl_lattice_planner, uri: 'https://github.com/trainman419/sbpl_lattice_planner.git'}
- git: {local-name: sbpl, uri: 'https://github.com/sbpl/sbpl.git'}

# Grasp Hack
- git: {local-name: pr2_common, uri: 'https://github.com/dornhege/pr2_common.git', version: "gazebo_grasp_tweaks"}
- git: {local-name: pr2_controllers, uri: 'https://github.com/dornhege/pr2_controllers.git', version: "gazebo_grasp_tweaks"}
- git: {local-name: pr2_simulator, uri: 'https://github.com/dornhege/pr2_simulator.git', version: "gazebo_grasp_tweaks"}

# Grasp provider
- git: {local-name: moveit_manipulation_tests, uri: 'git@aisgit.informatik.uni-freiburg.de:dornhege/moveit_manipulation_tests.git'}






